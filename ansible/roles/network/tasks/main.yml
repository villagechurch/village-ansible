---
# file: roles/dns/tasks/main.yml

- name: Install CentOS 8 network manager libs
  package:
    name:
      - NetworkManager-libnm
      - nm-connection-editor
      - python3-libsemanage
      - python3-policycoreutils
    state: present
  when: ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "8"

- name: Install CentOS 7 network manager libs
  package:
    name:
      - NetworkManager-glib
      - nm-connection-editor
      - libsemanage-python
      - policycoreutils-python
    state: present
  when: ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7"

- name: Try nmcli add teams
  community.general.nmcli:
    type: team
    conn_name: "{{ item.conn_name }}"
    ip4: "{{ item.ip4 }}"
    gw4: "{{ item.gw4 }}"
    dns4: "{{ item.dns4 }}"
    mtu: "{{ item.mtu }}"
    state: present
  with_items:
    - "{{ nmcli_team }}"
  when: eth_type == "team"
  register: team_result

- name: Try nmcli add team-slaves
  community.general.nmcli:
    type: team-slave
    conn_name: "{{ item.conn_name }}"
    ifname: "{{ item.ifname }}"
    master: "{{ item.master }}"
    state: present
  with_items:
    - "{{ nmcli_team_slave }}"
  when: team_result is succeeded and eth_type == "team"
  register: slave_result
  notify:
    - restart CentOS 8 network
    - restart CentOS 7 network

## ADD a Team clean up task similar to nmcli del interfaces

- name: Try nmcli add Ethernet
  community.general.nmcli:
    type: ethernet
    conn_name: "{{ item.conn_name }}"
    ifname: "{{ item.ifname }}"
    ip4: "{{ item.ip4 }}"
    gw4: "{{ item.gw4 }}"
    dns4: "{{ item.dns4 }}"
    state: present
  with_items:
    - "{{ nmcli_ethernet }}"
  when: eth_type == "eth"
  register: eth_result
  notify:
    - restart CentOS 8 network
    - restart CentOS 7 network

- name: Get nmcli connections - multiple
  command: "nmcli -t -f NAME con"
  register: nmcli_connections

- name: Make permitted_connctions list
  set_fact:
    permitted_connctions: []

- name: Add Teams to permitted_connections  
  set_fact:
    permitted_connctions: "{{ permitted_connctions + team_result.results | map(attribute='conn_name') | list }}"
  when: eth_type == "team"

- name: Add Team-slaves to permitted_connections  
  set_fact:
    permitted_connctions: "{{ permitted_connctions + slave_result.results | map(attribute='conn_name') | list }}"
  when: team_result is succeeded and eth_type == "team"

- name: Add Ethernet to permitted_connections  
  set_fact:
    permitted_connctions: "{{ permitted_connctions + eth_result.results | map(attribute='conn_name') | list }}"
  when: eth_type == "eth"

- name: list stdout.lines
  debug:
    msg: "{{ nmcli_connections.stdout_lines | list }}"

- name: list permitted_connections
  debug:
    msg: "{{ item }}"
  with_items:
    - "{{ nmcli_connections.stdout_lines | list }}"
  when: item not in permitted_connctions
  
- name: Try nmcli del interfaces not in permitted_connections
  community.general.nmcli:
    conn_name: "{{ item }}"
    state: absent
  with_items:
    - "{{ nmcli_connections.stdout_lines | list }}"
  when: item not in permitted_connctions
  notify:
    - restart CentOS 8 network
    - restart CentOS 7 network
